#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MePhim.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PHIM2")]
	public partial class dbPhimDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertNHASANXUAT(NHASANXUAT instance);
    partial void UpdateNHASANXUAT(NHASANXUAT instance);
    partial void DeleteNHASANXUAT(NHASANXUAT instance);
    partial void InsertTHELOAI(THELOAI instance);
    partial void UpdateTHELOAI(THELOAI instance);
    partial void DeleteTHELOAI(THELOAI instance);
    partial void InsertVIDEO(VIDEO instance);
    partial void UpdateVIDEO(VIDEO instance);
    partial void DeleteVIDEO(VIDEO instance);
    partial void InsertPHIMLE(PHIMLE instance);
    partial void UpdatePHIMLE(PHIMLE instance);
    partial void DeletePHIMLE(PHIMLE instance);
    partial void InsertCHIEURAP(CHIEURAP instance);
    partial void UpdateCHIEURAP(CHIEURAP instance);
    partial void DeleteCHIEURAP(CHIEURAP instance);
    partial void InsertPHIMBO(PHIMBO instance);
    partial void UpdatePHIMBO(PHIMBO instance);
    partial void DeletePHIMBO(PHIMBO instance);
    partial void InsertPHIMHAY(PHIMHAY instance);
    partial void UpdatePHIMHAY(PHIMHAY instance);
    partial void DeletePHIMHAY(PHIMHAY instance);
    partial void InsertNGUOIXEM(NGUOIXEM instance);
    partial void UpdateNGUOIXEM(NGUOIXEM instance);
    partial void DeleteNGUOIXEM(NGUOIXEM instance);
    partial void InsertPHIM(PHIM instance);
    partial void UpdatePHIM(PHIM instance);
    partial void DeletePHIM(PHIM instance);
    #endregion
		
		public dbPhimDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PHIM2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbPhimDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPhimDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPhimDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPhimDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<NHASANXUAT> NHASANXUATs
		{
			get
			{
				return this.GetTable<NHASANXUAT>();
			}
		}
		
		public System.Data.Linq.Table<THELOAI> THELOAIs
		{
			get
			{
				return this.GetTable<THELOAI>();
			}
		}
		
		public System.Data.Linq.Table<VIDEO> VIDEOs
		{
			get
			{
				return this.GetTable<VIDEO>();
			}
		}
		
		public System.Data.Linq.Table<PHIMLE> PHIMLEs
		{
			get
			{
				return this.GetTable<PHIMLE>();
			}
		}
		
		public System.Data.Linq.Table<CHIEURAP> CHIEURAPs
		{
			get
			{
				return this.GetTable<CHIEURAP>();
			}
		}
		
		public System.Data.Linq.Table<PHIMBO> PHIMBOs
		{
			get
			{
				return this.GetTable<PHIMBO>();
			}
		}
		
		public System.Data.Linq.Table<PHIMHAY> PHIMHAYs
		{
			get
			{
				return this.GetTable<PHIMHAY>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIXEM> NGUOIXEMs
		{
			get
			{
				return this.GetTable<NGUOIXEM>();
			}
		}
		
		public System.Data.Linq.Table<PHIM> PHIMs
		{
			get
			{
				return this.GetTable<PHIM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaAdmin;
		
		private string _TenAdmin;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaAdminChanging(int value);
    partial void OnMaAdminChanged();
    partial void OnTenAdminChanging(string value);
    partial void OnTenAdminChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAdmin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaAdmin
		{
			get
			{
				return this._MaAdmin;
			}
			set
			{
				if ((this._MaAdmin != value))
				{
					this.OnMaAdminChanging(value);
					this.SendPropertyChanging();
					this._MaAdmin = value;
					this.SendPropertyChanged("MaAdmin");
					this.OnMaAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenAdmin", DbType="NVarChar(20)")]
		public string TenAdmin
		{
			get
			{
				return this._TenAdmin;
			}
			set
			{
				if ((this._TenAdmin != value))
				{
					this.OnTenAdminChanging(value);
					this.SendPropertyChanging();
					this._TenAdmin = value;
					this.SendPropertyChanged("TenAdmin");
					this.OnTenAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(15)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(15)")]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(15)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHASANXUAT")]
	public partial class NHASANXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNSX;
		
		private string _TenNSX;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private EntitySet<THELOAI> _THELOAIs;
		
		private EntitySet<PHIMLE> _PHIMLEs;
		
		private EntitySet<CHIEURAP> _CHIEURAPs;
		
		private EntitySet<PHIMBO> _PHIMBOs;
		
		private EntitySet<PHIMHAY> _PHIMHAYs;
		
		private EntitySet<PHIM> _PHIMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNSXChanging(int value);
    partial void OnMaNSXChanged();
    partial void OnTenNSXChanging(string value);
    partial void OnTenNSXChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public NHASANXUAT()
		{
			this._THELOAIs = new EntitySet<THELOAI>(new Action<THELOAI>(this.attach_THELOAIs), new Action<THELOAI>(this.detach_THELOAIs));
			this._PHIMLEs = new EntitySet<PHIMLE>(new Action<PHIMLE>(this.attach_PHIMLEs), new Action<PHIMLE>(this.detach_PHIMLEs));
			this._CHIEURAPs = new EntitySet<CHIEURAP>(new Action<CHIEURAP>(this.attach_CHIEURAPs), new Action<CHIEURAP>(this.detach_CHIEURAPs));
			this._PHIMBOs = new EntitySet<PHIMBO>(new Action<PHIMBO>(this.attach_PHIMBOs), new Action<PHIMBO>(this.detach_PHIMBOs));
			this._PHIMHAYs = new EntitySet<PHIMHAY>(new Action<PHIMHAY>(this.attach_PHIMHAYs), new Action<PHIMHAY>(this.detach_PHIMHAYs));
			this._PHIMs = new EntitySet<PHIM>(new Action<PHIM>(this.attach_PHIMs), new Action<PHIM>(this.detach_PHIMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNSX", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string TenNSX
		{
			get
			{
				return this._TenNSX;
			}
			set
			{
				if ((this._TenNSX != value))
				{
					this.OnTenNSXChanging(value);
					this.SendPropertyChanging();
					this._TenNSX = value;
					this.SendPropertyChanged("TenNSX");
					this.OnTenNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(15)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_THELOAI", Storage="_THELOAIs", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<THELOAI> THELOAIs
		{
			get
			{
				return this._THELOAIs;
			}
			set
			{
				this._THELOAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_PHIMLE", Storage="_PHIMLEs", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<PHIMLE> PHIMLEs
		{
			get
			{
				return this._PHIMLEs;
			}
			set
			{
				this._PHIMLEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_CHIEURAP", Storage="_CHIEURAPs", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<CHIEURAP> CHIEURAPs
		{
			get
			{
				return this._CHIEURAPs;
			}
			set
			{
				this._CHIEURAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_PHIMBO", Storage="_PHIMBOs", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<PHIMBO> PHIMBOs
		{
			get
			{
				return this._PHIMBOs;
			}
			set
			{
				this._PHIMBOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_PHIMHAY", Storage="_PHIMHAYs", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<PHIMHAY> PHIMHAYs
		{
			get
			{
				return this._PHIMHAYs;
			}
			set
			{
				this._PHIMHAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_PHIM", Storage="_PHIMs", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<PHIM> PHIMs
		{
			get
			{
				return this._PHIMs;
			}
			set
			{
				this._PHIMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THELOAIs(THELOAI entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = this;
		}
		
		private void detach_THELOAIs(THELOAI entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = null;
		}
		
		private void attach_PHIMLEs(PHIMLE entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = this;
		}
		
		private void detach_PHIMLEs(PHIMLE entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = null;
		}
		
		private void attach_CHIEURAPs(CHIEURAP entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = this;
		}
		
		private void detach_CHIEURAPs(CHIEURAP entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = null;
		}
		
		private void attach_PHIMBOs(PHIMBO entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = this;
		}
		
		private void detach_PHIMBOs(PHIMBO entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = null;
		}
		
		private void attach_PHIMHAYs(PHIMHAY entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = this;
		}
		
		private void detach_PHIMHAYs(PHIMHAY entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = null;
		}
		
		private void attach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = this;
		}
		
		private void detach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.NHASANXUAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THELOAI")]
	public partial class THELOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTheLoai;
		
		private string _TenTheLoai;
		
		private System.Nullable<int> _MaNSX;
		
		private EntitySet<PHIM> _PHIMs;
		
		private EntityRef<NHASANXUAT> _NHASANXUAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheLoaiChanging(int value);
    partial void OnMaTheLoaiChanged();
    partial void OnTenTheLoaiChanging(string value);
    partial void OnTenTheLoaiChanged();
    partial void OnMaNSXChanging(System.Nullable<int> value);
    partial void OnMaNSXChanged();
    #endregion
		
		public THELOAI()
		{
			this._PHIMs = new EntitySet<PHIM>(new Action<PHIM>(this.attach_PHIMs), new Action<PHIM>(this.detach_PHIMs));
			this._NHASANXUAT = default(EntityRef<NHASANXUAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheLoai", DbType="NVarChar(50)")]
		public string TenTheLoai
		{
			get
			{
				return this._TenTheLoai;
			}
			set
			{
				if ((this._TenTheLoai != value))
				{
					this.OnTenTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenTheLoai = value;
					this.SendPropertyChanged("TenTheLoai");
					this.OnTenTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int")]
		public System.Nullable<int> MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._NHASANXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_PHIM", Storage="_PHIMs", ThisKey="MaTheLoai", OtherKey="MaTheLoai")]
		public EntitySet<PHIM> PHIMs
		{
			get
			{
				return this._PHIMs;
			}
			set
			{
				this._PHIMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_THELOAI", Storage="_NHASANXUAT", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true)]
		public NHASANXUAT NHASANXUAT
		{
			get
			{
				return this._NHASANXUAT.Entity;
			}
			set
			{
				NHASANXUAT previousValue = this._NHASANXUAT.Entity;
				if (((previousValue != value) 
							|| (this._NHASANXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHASANXUAT.Entity = null;
						previousValue.THELOAIs.Remove(this);
					}
					this._NHASANXUAT.Entity = value;
					if ((value != null))
					{
						value.THELOAIs.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHASANXUAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = this;
		}
		
		private void detach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VIDEO")]
	public partial class VIDEO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _MaPhim;
		
		private string _Video1;
		
		private string _TenPhim;
		
		private string _MoTa;
		
		private string _AnhBia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimChanging(System.Nullable<int> value);
    partial void OnMaPhimChanged();
    partial void OnVDChanging(string value);
    partial void OnVDChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    #endregion
		
		public VIDEO()
		{
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int", IsPrimaryKey=true)]
		public System.Nullable<int> MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Video", Storage="_Video1", DbType="VarChar(100)")]
		public string VD
		{
			get
			{
				return this._Video1;
			}
			set
			{
				if ((this._Video1 != value))
				{
					this.OnVDChanging(value);
					this.SendPropertyChanging();
					this._Video1 = value;
					this.SendPropertyChanged("VD");
					this.OnVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(50)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_VIDEO", Storage="_PHIM", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.VIDEO = null;
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.VIDEO = this;
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIMLE")]
	public partial class PHIMLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhimLe;
		
		private string _TenPhimLe;
		
		private System.Nullable<int> _MaNSX;
		
		private System.Nullable<int> _MaPhim;
		
		private string _AnhBia;
		
		private EntityRef<NHASANXUAT> _NHASANXUAT;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimLeChanging(int value);
    partial void OnMaPhimLeChanged();
    partial void OnTenPhimLeChanging(string value);
    partial void OnTenPhimLeChanged();
    partial void OnMaNSXChanging(System.Nullable<int> value);
    partial void OnMaNSXChanged();
    partial void OnMaPhimChanging(System.Nullable<int> value);
    partial void OnMaPhimChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    #endregion
		
		public PHIMLE()
		{
			this._NHASANXUAT = default(EntityRef<NHASANXUAT>);
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhimLe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhimLe
		{
			get
			{
				return this._MaPhimLe;
			}
			set
			{
				if ((this._MaPhimLe != value))
				{
					this.OnMaPhimLeChanging(value);
					this.SendPropertyChanging();
					this._MaPhimLe = value;
					this.SendPropertyChanged("MaPhimLe");
					this.OnMaPhimLeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhimLe", DbType="NVarChar(50)")]
		public string TenPhimLe
		{
			get
			{
				return this._TenPhimLe;
			}
			set
			{
				if ((this._TenPhimLe != value))
				{
					this.OnTenPhimLeChanging(value);
					this.SendPropertyChanging();
					this._TenPhimLe = value;
					this.SendPropertyChanged("TenPhimLe");
					this.OnTenPhimLeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int")]
		public System.Nullable<int> MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._NHASANXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int")]
		public System.Nullable<int> MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(50)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_PHIMLE", Storage="_NHASANXUAT", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true)]
		public NHASANXUAT NHASANXUAT
		{
			get
			{
				return this._NHASANXUAT.Entity;
			}
			set
			{
				NHASANXUAT previousValue = this._NHASANXUAT.Entity;
				if (((previousValue != value) 
							|| (this._NHASANXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHASANXUAT.Entity = null;
						previousValue.PHIMLEs.Remove(this);
					}
					this._NHASANXUAT.Entity = value;
					if ((value != null))
					{
						value.PHIMLEs.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHASANXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIMLE", Storage="_PHIM", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.PHIMLEs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.PHIMLEs.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHIEURAP")]
	public partial class CHIEURAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChieuRap;
		
		private string _TenChieuRap;
		
		private System.Nullable<int> _MaNSX;
		
		private System.Nullable<int> _MaPhim;
		
		private string _AnhBia;
		
		private EntityRef<NHASANXUAT> _NHASANXUAT;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChieuRapChanging(int value);
    partial void OnMaChieuRapChanged();
    partial void OnTenChieuRapChanging(string value);
    partial void OnTenChieuRapChanged();
    partial void OnMaNSXChanging(System.Nullable<int> value);
    partial void OnMaNSXChanged();
    partial void OnMaPhimChanging(System.Nullable<int> value);
    partial void OnMaPhimChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    #endregion
		
		public CHIEURAP()
		{
			this._NHASANXUAT = default(EntityRef<NHASANXUAT>);
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChieuRap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaChieuRap
		{
			get
			{
				return this._MaChieuRap;
			}
			set
			{
				if ((this._MaChieuRap != value))
				{
					this.OnMaChieuRapChanging(value);
					this.SendPropertyChanging();
					this._MaChieuRap = value;
					this.SendPropertyChanged("MaChieuRap");
					this.OnMaChieuRapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChieuRap", DbType="NVarChar(50)")]
		public string TenChieuRap
		{
			get
			{
				return this._TenChieuRap;
			}
			set
			{
				if ((this._TenChieuRap != value))
				{
					this.OnTenChieuRapChanging(value);
					this.SendPropertyChanging();
					this._TenChieuRap = value;
					this.SendPropertyChanged("TenChieuRap");
					this.OnTenChieuRapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int")]
		public System.Nullable<int> MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._NHASANXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int")]
		public System.Nullable<int> MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(50)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_CHIEURAP", Storage="_NHASANXUAT", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true)]
		public NHASANXUAT NHASANXUAT
		{
			get
			{
				return this._NHASANXUAT.Entity;
			}
			set
			{
				NHASANXUAT previousValue = this._NHASANXUAT.Entity;
				if (((previousValue != value) 
							|| (this._NHASANXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHASANXUAT.Entity = null;
						previousValue.CHIEURAPs.Remove(this);
					}
					this._NHASANXUAT.Entity = value;
					if ((value != null))
					{
						value.CHIEURAPs.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHASANXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_CHIEURAP", Storage="_PHIM", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.CHIEURAPs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.CHIEURAPs.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIMBO")]
	public partial class PHIMBO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhimBo;
		
		private string _TenPhimBo;
		
		private System.Nullable<int> _MaNSX;
		
		private System.Nullable<int> _MaPhim;
		
		private string _AnhBia;
		
		private EntityRef<NHASANXUAT> _NHASANXUAT;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimBoChanging(int value);
    partial void OnMaPhimBoChanged();
    partial void OnTenPhimBoChanging(string value);
    partial void OnTenPhimBoChanged();
    partial void OnMaNSXChanging(System.Nullable<int> value);
    partial void OnMaNSXChanged();
    partial void OnMaPhimChanging(System.Nullable<int> value);
    partial void OnMaPhimChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    #endregion
		
		public PHIMBO()
		{
			this._NHASANXUAT = default(EntityRef<NHASANXUAT>);
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhimBo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhimBo
		{
			get
			{
				return this._MaPhimBo;
			}
			set
			{
				if ((this._MaPhimBo != value))
				{
					this.OnMaPhimBoChanging(value);
					this.SendPropertyChanging();
					this._MaPhimBo = value;
					this.SendPropertyChanged("MaPhimBo");
					this.OnMaPhimBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhimBo", DbType="NVarChar(50)")]
		public string TenPhimBo
		{
			get
			{
				return this._TenPhimBo;
			}
			set
			{
				if ((this._TenPhimBo != value))
				{
					this.OnTenPhimBoChanging(value);
					this.SendPropertyChanging();
					this._TenPhimBo = value;
					this.SendPropertyChanged("TenPhimBo");
					this.OnTenPhimBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int")]
		public System.Nullable<int> MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._NHASANXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int")]
		public System.Nullable<int> MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(50)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_PHIMBO", Storage="_NHASANXUAT", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true)]
		public NHASANXUAT NHASANXUAT
		{
			get
			{
				return this._NHASANXUAT.Entity;
			}
			set
			{
				NHASANXUAT previousValue = this._NHASANXUAT.Entity;
				if (((previousValue != value) 
							|| (this._NHASANXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHASANXUAT.Entity = null;
						previousValue.PHIMBOs.Remove(this);
					}
					this._NHASANXUAT.Entity = value;
					if ((value != null))
					{
						value.PHIMBOs.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHASANXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIMBO", Storage="_PHIM", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.PHIMBOs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.PHIMBOs.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIMHAY")]
	public partial class PHIMHAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhimHay;
		
		private string _TenPhimHay;
		
		private System.Nullable<int> _MaNSX;
		
		private System.Nullable<int> _MaPhim;
		
		private string _AnhBia;
		
		private EntityRef<NHASANXUAT> _NHASANXUAT;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimHayChanging(int value);
    partial void OnMaPhimHayChanged();
    partial void OnTenPhimHayChanging(string value);
    partial void OnTenPhimHayChanged();
    partial void OnMaNSXChanging(System.Nullable<int> value);
    partial void OnMaNSXChanged();
    partial void OnMaPhimChanging(System.Nullable<int> value);
    partial void OnMaPhimChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    #endregion
		
		public PHIMHAY()
		{
			this._NHASANXUAT = default(EntityRef<NHASANXUAT>);
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhimHay", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhimHay
		{
			get
			{
				return this._MaPhimHay;
			}
			set
			{
				if ((this._MaPhimHay != value))
				{
					this.OnMaPhimHayChanging(value);
					this.SendPropertyChanging();
					this._MaPhimHay = value;
					this.SendPropertyChanged("MaPhimHay");
					this.OnMaPhimHayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhimHay", DbType="NVarChar(50)")]
		public string TenPhimHay
		{
			get
			{
				return this._TenPhimHay;
			}
			set
			{
				if ((this._TenPhimHay != value))
				{
					this.OnTenPhimHayChanging(value);
					this.SendPropertyChanging();
					this._TenPhimHay = value;
					this.SendPropertyChanged("TenPhimHay");
					this.OnTenPhimHayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int")]
		public System.Nullable<int> MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._NHASANXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int")]
		public System.Nullable<int> MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(50)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_PHIMHAY", Storage="_NHASANXUAT", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true)]
		public NHASANXUAT NHASANXUAT
		{
			get
			{
				return this._NHASANXUAT.Entity;
			}
			set
			{
				NHASANXUAT previousValue = this._NHASANXUAT.Entity;
				if (((previousValue != value) 
							|| (this._NHASANXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHASANXUAT.Entity = null;
						previousValue.PHIMHAYs.Remove(this);
					}
					this._NHASANXUAT.Entity = value;
					if ((value != null))
					{
						value.PHIMHAYs.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHASANXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIMHAY", Storage="_PHIM", ThisKey="MaPhim", OtherKey="MaPhim", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.PHIMHAYs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.PHIMHAYs.Add(this);
						this._MaPhim = value.MaPhim;
					}
					else
					{
						this._MaPhim = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIXEM")]
	public partial class NGUOIXEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNX;
		
		private string _HoTen;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXChanging(int value);
    partial void OnMaNXChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public NGUOIXEM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNX
		{
			get
			{
				return this._MaNX;
			}
			set
			{
				if ((this._MaNX != value))
				{
					this.OnMaNXChanging(value);
					this.SendPropertyChanging();
					this._MaNX = value;
					this.SendPropertyChanged("MaNX");
					this.OnMaNXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(15)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(10)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIM")]
	public partial class PHIM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhim;
		
		private string _TenPhim;
		
		private string _MoTa;
		
		private string _AnhBia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<int> _MaTheLoai;
		
		private System.Nullable<int> _MaNSX;
		
		private System.Nullable<int> _PhimVip;
		
		private System.Nullable<int> _LuotXem;
		
		private EntityRef<VIDEO> _VIDEO;
		
		private EntitySet<PHIMLE> _PHIMLEs;
		
		private EntitySet<CHIEURAP> _CHIEURAPs;
		
		private EntitySet<PHIMBO> _PHIMBOs;
		
		private EntitySet<PHIMHAY> _PHIMHAYs;
		
		private EntityRef<NHASANXUAT> _NHASANXUAT;
		
		private EntityRef<THELOAI> _THELOAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhimChanging(int value);
    partial void OnMaPhimChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnMaTheLoaiChanging(System.Nullable<int> value);
    partial void OnMaTheLoaiChanged();
    partial void OnMaNSXChanging(System.Nullable<int> value);
    partial void OnMaNSXChanged();
    partial void OnPhimVipChanging(System.Nullable<int> value);
    partial void OnPhimVipChanged();
    partial void OnLuotXemChanging(System.Nullable<int> value);
    partial void OnLuotXemChanged();
    #endregion
		
		public PHIM()
		{
			this._VIDEO = default(EntityRef<VIDEO>);
			this._PHIMLEs = new EntitySet<PHIMLE>(new Action<PHIMLE>(this.attach_PHIMLEs), new Action<PHIMLE>(this.detach_PHIMLEs));
			this._CHIEURAPs = new EntitySet<CHIEURAP>(new Action<CHIEURAP>(this.attach_CHIEURAPs), new Action<CHIEURAP>(this.detach_CHIEURAPs));
			this._PHIMBOs = new EntitySet<PHIMBO>(new Action<PHIMBO>(this.attach_PHIMBOs), new Action<PHIMBO>(this.detach_PHIMBOs));
			this._PHIMHAYs = new EntitySet<PHIMHAY>(new Action<PHIMHAY>(this.attach_PHIMHAYs), new Action<PHIMHAY>(this.detach_PHIMHAYs));
			this._NHASANXUAT = default(EntityRef<NHASANXUAT>);
			this._THELOAI = default(EntityRef<THELOAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhim
		{
			get
			{
				return this._MaPhim;
			}
			set
			{
				if ((this._MaPhim != value))
				{
					this.OnMaPhimChanging(value);
					this.SendPropertyChanging();
					this._MaPhim = value;
					this.SendPropertyChanged("MaPhim");
					this.OnMaPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(50)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="Int")]
		public System.Nullable<int> MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					if (this._THELOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int")]
		public System.Nullable<int> MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._NHASANXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhimVip", DbType="Int")]
		public System.Nullable<int> PhimVip
		{
			get
			{
				return this._PhimVip;
			}
			set
			{
				if ((this._PhimVip != value))
				{
					this.OnPhimVipChanging(value);
					this.SendPropertyChanging();
					this._PhimVip = value;
					this.SendPropertyChanged("PhimVip");
					this.OnPhimVipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuotXem", DbType="Int")]
		public System.Nullable<int> LuotXem
		{
			get
			{
				return this._LuotXem;
			}
			set
			{
				if ((this._LuotXem != value))
				{
					this.OnLuotXemChanging(value);
					this.SendPropertyChanging();
					this._LuotXem = value;
					this.SendPropertyChanged("LuotXem");
					this.OnLuotXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_VIDEO", Storage="_VIDEO", ThisKey="MaPhim", OtherKey="MaPhim", IsUnique=true, IsForeignKey=false)]
		public VIDEO VIDEO
		{
			get
			{
				return this._VIDEO.Entity;
			}
			set
			{
				VIDEO previousValue = this._VIDEO.Entity;
				if (((previousValue != value) 
							|| (this._VIDEO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VIDEO.Entity = null;
						previousValue.PHIM = null;
					}
					this._VIDEO.Entity = value;
					if ((value != null))
					{
						value.PHIM = this;
					}
					this.SendPropertyChanged("VIDEO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIMLE", Storage="_PHIMLEs", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<PHIMLE> PHIMLEs
		{
			get
			{
				return this._PHIMLEs;
			}
			set
			{
				this._PHIMLEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_CHIEURAP", Storage="_CHIEURAPs", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<CHIEURAP> CHIEURAPs
		{
			get
			{
				return this._CHIEURAPs;
			}
			set
			{
				this._CHIEURAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIMBO", Storage="_PHIMBOs", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<PHIMBO> PHIMBOs
		{
			get
			{
				return this._PHIMBOs;
			}
			set
			{
				this._PHIMBOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIMHAY", Storage="_PHIMHAYs", ThisKey="MaPhim", OtherKey="MaPhim")]
		public EntitySet<PHIMHAY> PHIMHAYs
		{
			get
			{
				return this._PHIMHAYs;
			}
			set
			{
				this._PHIMHAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHASANXUAT_PHIM", Storage="_NHASANXUAT", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true)]
		public NHASANXUAT NHASANXUAT
		{
			get
			{
				return this._NHASANXUAT.Entity;
			}
			set
			{
				NHASANXUAT previousValue = this._NHASANXUAT.Entity;
				if (((previousValue != value) 
							|| (this._NHASANXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHASANXUAT.Entity = null;
						previousValue.PHIMs.Remove(this);
					}
					this._NHASANXUAT.Entity = value;
					if ((value != null))
					{
						value.PHIMs.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHASANXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_PHIM", Storage="_THELOAI", ThisKey="MaTheLoai", OtherKey="MaTheLoai", IsForeignKey=true)]
		public THELOAI THELOAI
		{
			get
			{
				return this._THELOAI.Entity;
			}
			set
			{
				THELOAI previousValue = this._THELOAI.Entity;
				if (((previousValue != value) 
							|| (this._THELOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THELOAI.Entity = null;
						previousValue.PHIMs.Remove(this);
					}
					this._THELOAI.Entity = value;
					if ((value != null))
					{
						value.PHIMs.Add(this);
						this._MaTheLoai = value.MaTheLoai;
					}
					else
					{
						this._MaTheLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("THELOAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMLEs(PHIMLE entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_PHIMLEs(PHIMLE entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
		
		private void attach_CHIEURAPs(CHIEURAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_CHIEURAPs(CHIEURAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
		
		private void attach_PHIMBOs(PHIMBO entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_PHIMBOs(PHIMBO entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
		
		private void attach_PHIMHAYs(PHIMHAY entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_PHIMHAYs(PHIMHAY entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
	}
}
#pragma warning restore 1591
